name: Build
on:
  workflow_call:
    inputs:
      binary:
        required: true
        type: string
      target:
        required: true
        type: string

jobs:
  build-binary:
    name: Build binary
    runs-on: ${{ contains(inputs.target, 'linux') && 'ubuntu-latest' || 'macos-latest' }}
    container:
      image: ${{ contains(inputs.target, 'linux') && 'debian:trixie' || '' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download known-good PCR0s
        if: ${{ inputs.binary == 'client' }}
        uses: actions/download-artifact@v3
        with:
          name: known-good-pcr0s.txt
          path: pcr0s

      - name: Install known-good PCR0s
        if: ${{ inputs.binary == 'client' }}
        run: mv pcr0s/known-good-pcr0s.txt .

      - name: Install Linux-specific toolchains
        if: ${{ contains(inputs.target, 'linux') }}
        env:
          ARCH: ${{ contains(inputs.target, 'x86_64') && 'amd64' || 'arm64' }}
        run: |
          dpkg --add-architecture ${ARCH}
          apt-get update
          apt-get install --assume-yes gcc rustup musl-dev:${ARCH}

      - name: Install Rust
        run: |
          rustup default stable
          rustup target add ${{ inputs.target }}

      - name: Build executable
        run: cargo build --release --target ${{ inputs.target }} --all-features --bin ${{ inputs.binary }}

      - name: Package executable
        shell: bash
        run: |
          mkdir ${{ inputs.binary }}-${{ github.ref_name }}-${{ inputs.target }}
          cp target/${{ inputs.target }}/release/${{ inputs.binary }} $_
          tar --create --gzip --file $_.tar.gz $_

      - name: Upload executable
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.binary }}-${{ github.ref_name }}-${{ inputs.target }}.tar.gz
          path: ${{ inputs.binary }}-${{ github.ref_name }}-${{ inputs.target }}.tar.gz

      - name: Publish executable
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ github.ref_name }}
          files: ${{ inputs.binary }}-${{ github.ref_name }}-${{ inputs.target }}.tar.gz
